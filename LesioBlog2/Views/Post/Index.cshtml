@model PagedList.IPagedList<LesioBlog2_Repo.Models.Post>

@using PagedList.Mvc;
@using System.Web.Mvc.Html;


@{
    ViewBag.Title = "Posts";
}

<div style="margin-left:10px;">
    <h2>Posts</h2>
</div>

<p>
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "Post", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div style="margin-left: 30px; padding: 2px; width:auto">
                Add post:
                <br>
                <textarea name="content" style="margin-top: 12px; min-width: 90%; border-radius: 0.25rem;  resize: none"></textarea>
                <br />
                <span style="margin-left: 0px">
                    <div class="form-group">
                        <div class=" col-md-1">
                            <input type="submit" value="Send post" class="btn btn-success" />
                        </div>
                    </div>
                </span>
            </div>
        }
    }
</p>

@foreach (var item in Model.OrderByDescending(x => x.AddingDate))
{
    <div id="papito">
        <span style="float:left; margin-left:1.5%;" class="">
            Author: @Html.DisplayFor(modelItem => item.User.NickName)
            <span style="font-size: 12px">

                @Html.ActionLink(@Html.DisplayFor(modelItem => item.AddingDate).ToString(), "GoToParentWpis", "Post", new { id = item.Post_Id }, null)
            </span>
            <span style="font-size: 12px">
                Edited:
                @Html.DisplayFor(modelItem => item.EditingDate)
            </span>
        </span>
        <span style="float:right ; padding:8px">
            <span class="">
                @Html.AntiForgeryToken()
                @if (Request.IsAuthenticated)
                {
                    <div id="kid">
                        <button class="colorA js-toggle-plusing"
                                data-post-id="@item.Post_Id" data-votes-count="@item.Votes">
                            @Html.DisplayFor(modelitem => item.Votes)
                        </button>
                    </div>
                }
                else
                {
                    <div id="kid" style="margin-right:40px;">
                        @Html.DisplayFor(modelItem => item.Votes)
                    </div>

                }
            </span>
        </span>
    </div>
    <div>
        <div style="border:groove 5px; border-radius:10px; border-color:lavenderblush;  background-color:ghostwhite; margin-left:1%; margin-right:1%">
            <br>
            @Html.DisplayFor(modelItem => item.Content)
            <br />
            <div style="padding-bottom: 0px; font-size: 12px">
                @if (Request.IsAuthenticated)
                {

                    if (System.Web.HttpContext.Current.User.Identity.Name.ToLower() == item.User.NickName.ToLower())
                    { <span style="margin-left:0.1%;"></span>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Post_Id }, new { @class = "btn btn-sm", @style = "color:white" });
                        <span style="margin-left:0.1%;"></span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Post_Id }, new { @class = "btn btn-sm", @style = "color:white" })
                    }
                }
            </div>
        </div>
        <div>
            @*Tu o dodanie komentarza*@
            <div>
                @Html.Action("_CommentAddPartial", "Comments", new { id = item.Post_Id });

            </div>
        </div>
        @* View comments bellow the wpis *@

        @*2 pokaz ostatnie reszte zawin*@
        <div style="">
            @foreach (var item2 in item.Comments.OrderBy(x => x.AddingDate))
            {
                <div style="border:groove 5px; border-radius:10px; border-color:lavenderblush;  background-color:honeydew; margin-left:5%; margin-right:1%">

                    <div style="margin-left: 0%; padding: 0px" class="">
                        Author: @Html.DisplayFor(modelItem => item2.User.NickName)
                        <span style="font-size: 12px">
                            @Html.DisplayFor(modelItem => item2.AddingDate)
                        </span>
                        <span style="float:right ; padding:0px">
                            <span class="">
                                @Html.AntiForgeryToken()
                                @if (Request.IsAuthenticated)
                                {
                                    <div id="kid">
                                        <button class="colorA js-toggle-plusing2"
                                                data-comm-id="@item2.Comment_Id" data-votes-count2="@item2.Votes">
                                            @Html.DisplayFor(modelitem => item2.Votes)
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div id="kid" style="margin-right:40px;">

                                        @Html.DisplayFor(modelItem => item2.Votes)
                                    </div>
                                }
                            </span>
                        </span>

                        <br>
                        @Html.DisplayFor(modelItem => item2.Content)
                        <br />
                    </div>
                    <div style="padding-bottom: 0px; font-size: 12px">
                        @Html.Partial("~/Views/Comments/_CommentPartial.cshtml", item2)
                    </div>
                </div>
                <div style="padding-top:5px;">
                </div>
            }
            <div style="padding-top:10px;"></div>
        </div>
    </div>
}

<div class="pagination">

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item", "page-link" }
    })
</div>


@section scripts
{
    <script>

        $(document).ready(function () {
            $(".js-toggle-plusing").click(function (e) {

                debugger
                var token = $('input[name=__RequestVerificationToken]').val();
                var post = {};
                post["PosT_Id"] = $(e.target).attr("data-post-id");
                post["Votes"] = $(e.target).attr("data-votes-count");
                var theData = $.extend({}, token, post, true);
                $.ajax({
                    context: this,
                    type: "POST",
                    url: "/Post/AddPlus",
                    data: { __RequestVerificationToken: token, post: theData },
                    success: function (result) {
                        var voting = result.votes;
                        var resultCheck = result.result;
                        debugger;
                        if (resultCheck) {
                            $(e.target).removeClass("colorA")
                                .addClass("colorB")
                                .text(voting);

                        }
                        else {
                            $(e.target)
                                .removeClass("colorB")
                                .addClass("colorA")
                                .text(voting);
                        }
                    }
                });
            });
        })



        $(document).ready(function () {
            $(".js-toggle-plusing2").click(function (e) {

                debugger
                var token = $('input[name=__RequestVerificationToken]').val();
                var comment = {};
                comment["Comment_Id"] = $(e.target).attr("data-comm-id");
                comment["Votes"] = $(e.target).attr("data-votes-count2");
                var theData = $.extend({}, token, comment, true);
                $.ajax({
                    context: this,
                    type: "POST",
                    url: "/Comments/AddPlus",
                    data: { __RequestVerificationToken: token, comment: theData },
                    success: function (result) {
                        var voting = result.votes;
                        var resultCheck = result.result;
                        debugger;
                        if (resultCheck) {
                            $(e.target).removeClass("colorA")
                                .addClass("colorB")
                                .text(voting);

                        }
                        else {
                            $(e.target)
                                .removeClass("colorB")
                                .addClass("colorA")
                                .text(voting);
                        }
                    }
                });
            });
        })


        @*

            script comment adding


                *@









    </script>
}

