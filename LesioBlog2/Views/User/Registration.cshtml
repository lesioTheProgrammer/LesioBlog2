@model LesioBlog2_Repo.Models.User
@{
    ViewBag.Title = "Registration";

    Layout = "~/Views/Shared/_Layout.cshtml";


}
    <div style="margin-left:10px;">
        <h2>Registration</h2>

    </div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Registration failed, please check your inputs");

<div>

    <form>
        <div class="form-group" style="margin-left: 30px; margin-top:50px;">
            @Html.LabelFor(x => x.Email)

            @Html.TextBoxFor(x=>x.Email, new  {@class="form-control",  aria_describedby="emailHelp", placeholder="Enter email" })
            <small id="emailHelp" class="form-text text-muted">
                @Html.ValidationMessageFor(x => x.Email)
            </small>
        </div>

        <div class="form-group" style="margin-left: 30px; margin-top:20px;">
            @Html.LabelFor(x => x.Password)
            @Html.PasswordFor(x => x.Password, new { @class = "form-control", aria_describedby = "passHelp", placeholder = "Password" })
            <small id="passHelp" class="form-text text-muted">
                @Html.ValidationMessageFor(x => x.Password)
            </small>

        </div>

        <div class="form-group" style="margin-left: 30px; margin-top:20px;">
            @Html.LabelFor(x => x.NickName)
            @Html.TextBoxFor(x => x.NickName, new { @class = "form-control", aria_describedby = "nickHelp" })
            <small id="nickHelp" class="form-text text-muted">
                @Html.ValidationMessageFor(x => x.NickName)
            </small>
        </div>

        <div class="form-group" style="margin-left: 30px; margin-top:20px;">
            @Html.LabelFor(x => x.FullName)
            @Html.TextBoxFor(x => x.FullName, new { @class = "form-control", aria_describedby = "fullHelp" })
            <small id="fullHelp" class="form-text text-muted">
                @Html.ValidationMessageFor(x => x.FullName)
            </small>
        </div>

        <div class="form-group" style="margin-left: 30px; margin-top:20px;">
            @Html.LabelFor(x => x.City)
            @Html.TextBoxFor(x => x.City, new { @class = "form-control", aria_describedby = "cityHelp" })
            <small id="cityHelp" class="form-text text-muted">
                @Html.ValidationMessageFor(x => x.City)
            </small>

        </div>
        <div>
            <legend class="col-form-label col-sm-2 pt-0" style="margin-left: 20px;">Gender: </legend>
            <div class="col-sm-10" style="margin-left:0px;">
                <div class="form-check" style="display:inline;">
                    <label style="margin-top:4px;  vertical-align:middle">  @Html.RadioButtonFor(x => x.GenderID, 1, new { @class = "form-check", type = "radio", value = "1" })</label>
                    @Html.Label("Male")
                </div>
                    <div class="form-check" style="display:inline; ">
                       <label style="margin-top:4px; vertical-align:middle"> @Html.RadioButtonFor(x => x.GenderID, 2, new { @class = "form-check", type = "radio", value = "2" })</label>
                        @Html.Label("Female")
                    </div>
             </div>
              
        </div>

        <button type="submit" class="btn btn-primary" style="margin-left: 30px; margin-top:30px;">Submit</button>
    </form>

</div>

}


@section scripts
{
    <script>


        $(document).on('invalid-form.validate', 'form', function () {
            debugger;
            var button = $(this).find('input[type="submit"], button[type="submit"]');
            setTimeout(function () {
                button.removeAttr('disabled');
            }, 1);
        });



        $(document).on('submit', 'form', function () {
            var button = $(this).find('input[type="submit"], button[type="submit"]');
            setTimeout(function () {
                button.attr('disabled', 'disabled');
            }, 0);
        });



    </script>


}
